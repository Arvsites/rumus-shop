services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      WEBAPP_URL: ${WEBAPP_URL}
    expose:
      - "8000"
    healthcheck:
      test: ["CMD", "python", "-c", "import sys,urllib.request; sys.exit(0 if urllib.request.urlopen('http://localhost:8000/health').getcode()==200 else 1)"]
      interval: 15s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      WEBAPP_URL: ${WEBAPP_URL}
    depends_on:
      backend:
        condition: service_started
    restart: unless-stopped

  caddy:
    image: caddy:2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./backend/static:/srv/static:ro
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
